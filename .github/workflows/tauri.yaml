name: "Build Tauri App"

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest-xlarge" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest-large" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - run: pip install -r requirements.txt pyinstaller
      - run: |
          export output_name="awsl-divination"
          if [ ${{ matrix.os }} == "windows-latest" ]; then
            output_name+=".exe"
          elif [ ${{ matrix.os }} == "macos-latest-large" ]; then
            output_name+="-x86_64-apple-darwin"
          elif [ ${{ matrix.os }} == "macos-latest-xlarge" ]; then
            output_name+="-aarch64-apple-darwin"
          fi
          pyinstaller --onefile main-tauri.py --name $output_name
          mkdir -p src-tauri/bin/
          cp dist/$output_name src-tauri/bin/$output_name

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Build Frontend
        run: |
          cd frontend
          pnpm install --no-frozen-lockfile
          pnpm build:tauri

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
